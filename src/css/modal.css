.modal {
  --gutter: var(--space-xl);
  inset-block-start: auto;
  margin: auto;
  padding: 0;
  inline-size: 100%;
  max-inline-size: 100%;
  min-block-size: 15rem;
  max-block-size: calc(100% - var(--gutter) * 2);
  border: unset;
  border-radius: var(--radius-m) var(--radius-m) 0 0;
  background-color: var(--white);
}

.modal:not([open]) {
  pointer-events: none !important;
}

html:has(.modal[open]) {
  overflow: hidden;
}

.modal::backdrop {
  background: hsla(0 0% 0% / 0.5);
}

.modal form {
  display: grid;
  grid-template-rows: auto 1fr auto;
  gap: var(--gutter);
  padding-block: var(--gutter);
  min-height: 100%;
}

.modal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding-inline: var(--gutter);
}

:where(.modal:not([data-variant="drawer"])) .modal-header {
  margin-block-end: calc(var(--gutter) * -1);
}

.modal-content {
  overflow-y: auto;
  max-block-size: 100%;
  overscroll-behavior-y: contain;
  padding-block: var(--space-xs);
  padding-inline: var(--gutter);
}

.modal-actions {
  display: grid;
  gap: var(--space-m);
  margin-inline: auto;
  padding-inline: var(--gutter);
  inline-size: 100%;
}

.modal-close {
  --button-bg: transparent;
  --padding: var(--space-s);
  margin-inline-start: auto;
  margin-block-start: calc(var(--padding) * -1);
  margin-inline-end: calc(var(--padding) * -1);
  padding: var(--padding);
  border: 0;
}

.modal[data-variant="drawer"] {
  height: 100%;
  max-inline-size: unset;
  max-block-size: unset;
  inset-inline-start: auto;
  border-radius: 0;
  inline-size: min(38rem, 100%);
  background-color: var(--subtle-gray);
}

@media (min-width: 35rem) {
  .modal {
    inset-block-start: 0;
    inline-size: min(25rem, 100%);
    max-inline-size: calc(100% - var(--gutter) * 2);
    border-radius: var(--radius-m);
  }
}

/* Tighter viewport transitions */
@media (prefers-reduced-motion: no-preference) {
  .modal {
    --duration: 350ms;
    --ease: cubic-bezier(0.16, 1, 0.3, 1);
    transition: display allow-discrete, overlay allow-discrete, translate, scale, opacity;
    transition-duration: var(--duration);
    transition-timing-function: var(--ease);
    translate: 0 100%;
  }

  .modal[data-variant="drawer"] {
    --duration: 450ms;
    translate: 100% 0;
  }

  .modal[open] {
    translate: 0 0;
  }

  ::backdrop {
    transition: display allow-discrete, overlay allow-discrete, opacity;
    transition-duration: var(--duration);
    transition-timing-function: var(--ease);
    opacity: 0;
  }

  [open]::backdrop {
    opacity: 1;
  }

  @starting-style {
    .modal[open] {
      translate: 0 100%;
    }

    .modal[data-variant="drawer"][open] {
      translate: 100% 0;
    }

    [open]::backdrop {
      opacity: 0;
    }
  }
}

/* Wider viewport transitions */
@media (min-width: 35rem) and (prefers-reduced-motion: no-preference) {
  .modal:not([data-variant="drawer"]) {
    scale: 0.9;
    opacity: 0;
    translate: unset;
  }

  .modal[open] {
    scale: 1;
    opacity: 1;
  }

  @starting-style {
    .modal:not([data-variant="drawer"])[open] {
      scale: 0.9;
      opacity: 0;
      translate: unset;
    }

    [open]::backdrop {
      opacity: 0;
    }
  }
}
